#
# dockerize 用来做服务先后启动顺序的, 这里main程序要等到redis, mysql 起来后才能启动
# ${xx}定义在.env 中
#
version: '3'
services:
  main:
    container_name: ${PROJECT_NAME}_main
    image: ${PROJECT_NAME}_main
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - redis
    volumes:
      - main:/logs
    # 使用dockerize 检测到redis， mysql 成功启动后再启动web服务,超时时间180秒
    command: ["dockerize", "-wait", "tcp://${PROJECT_NAME}_mysql:3306", "-wait", "tcp://${PROJECT_NAME}_redis:6379", "-timeout", "180s", "/usr/local/bin/${PROJECT_NAME}", "-config=/etc/${PROJECT_NAME}_config.ini"]
  redis:
    image: "redis:5.0"
    container_name: ${PROJECT_NAME}_redis
    ports:
      - 6380:6379
  mysql:
    container_name: ${PROJECT_NAME}_mysql        # 指定容器的名称
    image: ${PROJECT_NAME}_mysql:latest
    ports:
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
    volumes:
      - mysql:/var/lib/mysql
      - ${MYSQL_CONF_DIR}:/etc/mysql/conf.d/      # 挂载配置文件目录
# # 创建volume, 等于 docker volume create gin-api-common_main
volumes:
  main:
  mysql: